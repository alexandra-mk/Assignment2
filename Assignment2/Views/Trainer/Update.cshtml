@model Assignment2.Models.Trainer
@using Assignment2.Models.Enums

<h1>@ViewBag.update</h1>

<form method="post">
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(t => t.FirstName)
        @Html.EditorFor(t => t.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter firstname" } })
        @Html.ValidationMessageFor(t => t.FirstName, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(t => t.LastName)
        @Html.EditorFor(t => t.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter lastname" } })
        @Html.ValidationMessageFor(t => t.LastName, "", new { @class = "text-danger" })
    </div>

    @{ var subjects = Enum.GetNames(typeof(Subject)); }


    <div class="form-group">
        <label for="subject"></label>
        <select id="subject" class="form-control" name="Subject" value="@(Model?.SubjectString)">
            var subject = trainer.Subject == 0 ? trainer.SubjectString.Replace("Sharp", "#") : trainer.SubjectString;

            @for (int i = 0; i < subjects.Length; i++)
            {
                var subject = i == 0 ? subjects[i].ToString().Replace("Sharp", "#") : subjects[i].ToString();
                if (subjects[i] == Model?.SubjectString)
                {
                    <option selected value="@i">@subject</option>
                }
                else
                {
                    <option value="@i">@subject</option>
                }

            }

        </select>
    </div>

    <input class="btn btn-success" type="submit" value="Update" />
    <input class="btn btn-warning" type="reset" value="Clear" />
</form>
<br />
<br />
<br />
@Html.ActionLink("Go Back", "Index", null, new { @class = "btn btn-primary" })

@section myCss{

    <style>
        body {
            background-color: honeydew;
        }
    </style>


}